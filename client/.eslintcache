[{"/home/imran/Documents/CDP/BookSelf Project/client/src/index.js":"1","/home/imran/Documents/CDP/BookSelf Project/client/src/components/home.js":"2","/home/imran/Documents/CDP/BookSelf Project/client/src/app.js":"3","/home/imran/Documents/CDP/BookSelf Project/client/src/components/BookDetails.js":"4","/home/imran/Documents/CDP/BookSelf Project/client/src/components/login.js":"5","/home/imran/Documents/CDP/BookSelf Project/client/src/components/profile.js":"6","/home/imran/Documents/CDP/BookSelf Project/client/src/components/signup.js":"7","/home/imran/Documents/CDP/BookSelf Project/client/src/components/AddBook.js":"8","/home/imran/Documents/CDP/BookSelf Project/client/src/services/auth.service.js":"9","/home/imran/Documents/CDP/BookSelf Project/client/src/services/book.service.js":"10","/home/imran/Documents/CDP/BookSelf Project/client/src/components/EditBookForm.js":"11","/home/imran/Documents/CDP/BookSelf Project/client/src/components/book.js":"12","/home/imran/Documents/CDP/BookSelf Project/client/src/components/updateProfile.js":"13"},{"size":330,"mtime":1608093270632,"results":"14","hashOfConfig":"15"},{"size":1152,"mtime":1608139589448,"results":"16","hashOfConfig":"15"},{"size":3458,"mtime":1608141468683,"results":"17","hashOfConfig":"15"},{"size":1698,"mtime":1608141735337,"results":"18","hashOfConfig":"15"},{"size":2135,"mtime":1608139091680,"results":"19","hashOfConfig":"15"},{"size":1751,"mtime":1608138172847,"results":"20","hashOfConfig":"15"},{"size":3544,"mtime":1608139107372,"results":"21","hashOfConfig":"15"},{"size":3002,"mtime":1608129393708,"results":"22","hashOfConfig":"15"},{"size":2023,"mtime":1608137458683,"results":"23","hashOfConfig":"15"},{"size":2381,"mtime":1608133956144,"results":"24","hashOfConfig":"15"},{"size":3495,"mtime":1608130336096,"results":"25","hashOfConfig":"15"},{"size":4937,"mtime":1608142056323,"results":"26","hashOfConfig":"15"},{"size":3661,"mtime":1608138150243,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"xbuz9r",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/home/imran/Documents/CDP/BookSelf Project/client/src/index.js",["62"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Home from \"./components/home.js\";\nimport App from \"./app\";\nReactDOM.render(\n  // <Home/>,\n    <BrowserRouter>\n      <App/>,\n      {/* <Home/> */}\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n  );\n  \n",["63","64"],"/home/imran/Documents/CDP/BookSelf Project/client/src/components/home.js",["65"],"import React,{useState} from \"react\";\n\n\n const Home=()=>{\n\n    \n    return(\n      \n     <div>\n        <div class=\"jumbotron text-center\">\n            <h1>Home Page</h1>\n            <p>BookSelf Project</p> \n            </div>\n  \n        <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n            <h3>Column 1</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>\n            <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris...</p>\n            </div>\n            <div class=\"col-sm-4\">\n            <h3>Column 2</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>\n            <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris...</p>\n            </div>\n            <div class=\"col-sm-4\">\n            <h3>Column 3</h3>        \n            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit...</p>\n            <p>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris...</p>\n            </div>\n        </div>\n        </div>\n        </div>\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    )\n}\n\n\nexport default Home","/home/imran/Documents/CDP/BookSelf Project/client/src/app.js",[],"/home/imran/Documents/CDP/BookSelf Project/client/src/components/BookDetails.js",["66","67","68","69"],"import React,{useState} from \"react\";\nimport axios from \"axios\";\nimport \"./home.css\"\nimport BookService from \"../services/book.service\"\n\nclass BookDetails extends React.Component{\n\n    state = {book:''}\n\n    async componentDidMount (){\n        const str = window.location.href.split('/')\n        const apiURL = `/book/detail/${str[5]}`\n        const response = await BookService.bookdetail(str[5])\n        this.setState({book:response});\n        console.log(response)\n\n\n    }\n\n   \n    \n    render(){\n        const mystyle = {\n           width:\"500px\" , marginRight:\"440px\",\n           color: \"Cyan\",\n            // backgroundColor: \"Cyan\",\n            padding: \"10px\",\n            fontFamily: \"Arial\"\n        }\n        const mystyle2 = {\n            width:\"450px\" , marginRight:\"440px\",\n            color: \"white\",\n             backgroundColor: \"Navy\",\n             padding: \"10px\",\n             fontFamily: \"Arial\"\n         }\n\n        const {id,title,author,genre,description} = this.state.book\n        return(\n           \n           <div  style = {mystyle} class=\"card\">\n              \n              <header className=\"jumbotron\">\n                 <h3>\n                     <strong>{title}</strong> Detail\n                </h3>\n            </header>\n                <div class=\"card-body\" style={mystyle2}>\n                    \n                <h4>Title: {title} </h4>\n                    <h4>Author: {author} </h4>\n                    <h4>Genre: {genre}</h4>\n                    <h4>Description: {description}</h4>\n\n\n                </div>\n\n             </div>\n\n\n\n\n\n\n\n\n\n\n\n            \n             \n              \n               \n            )\n           \n        }\n}\n\nexport default BookDetails","/home/imran/Documents/CDP/BookSelf Project/client/src/components/login.js",[],"/home/imran/Documents/CDP/BookSelf Project/client/src/components/profile.js",[],"/home/imran/Documents/CDP/BookSelf Project/client/src/components/signup.js",[],"/home/imran/Documents/CDP/BookSelf Project/client/src/components/AddBook.js",[],"/home/imran/Documents/CDP/BookSelf Project/client/src/services/auth.service.js",["70"],"\nclass AuthService {\n  async login(email, password) {\n\n    try{\n        const response = await fetch('/user/login', {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email,password}),\n        });\n        const data = await response.text();\n        const body = JSON.parse(data)\n        const token1 = body.tokens[0].token\n\n        if(token1){\n        localStorage.setItem(\"user\", data);\n        localStorage.setItem(\"token\", token1);\n      \n      }\n        return data;\n\n    }catch(e){\n      return e;\n    }\n\n  }\n  async signup(name,email, password,sex,age) {\n\n    try{\n        const response = await fetch('/user/signup', {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name,email, password,sex,age}),\n        });\n        const data = await response.text();\n        const body = JSON.parse(data)\n        \n        return data;\n      }catch(e){\n      return e;\n    }\n\n  }\n  async update(name, password,sex,age,token) {\n\n    try{\n        const response = await fetch('/me/update', {\n        method: 'PATCH',\n        headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token\n        },\n        body: JSON.stringify({ name, password,sex,age}),\n        });\n        // localStorage.removeItem(\"user\");\n        // localStorage.removeItem(\"token\");\n\n        const data = await response.text();\n        const body = JSON.parse(data)\n        const token1 = body.tokens[0].token\n        localStorage.setItem(\"user\", data);\n\n        if(token1){\n        localStorage.setItem(\"user\", data);\n        localStorage.setItem(\"token\", token1);\n        }\n\n\n        \n        \n        return data;\n      }catch(e){\n      return e;\n    }\n\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"token\");\n  }\n\n\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n}\n\nexport default new AuthService();\n","/home/imran/Documents/CDP/BookSelf Project/client/src/services/book.service.js",["71","72"],"\nclass BookService {\n    async getbooks() {\n  \n      try{\n          const response = await fetch('/book/', {\n          method: 'GET',\n          headers: {\n          'Content-Type': 'application/json',\n          },\n          });\n          // const data = await response.text();  \n        \n          return response.data;\n  \n    }catch(e){\n        return e;\n      }\n  \n    }\n    async deletebook(id,token) {\n  \n      try{\n          const response = await fetch(`/book/delete/${id}/`, {\n          method: 'DELETE',\n          headers: {\n        \n          'Content-Type': 'application/json',\n          'Authorization': token\n          },\n          });\n          console.log()\n          // const data = await response.text();  \n        \n          return response.data;\n  \n    }catch(e){\n        return e;\n      }\n  \n    }\n    async addbook(title,author, genre,description,token) {\n\n      try{\n          const response = await fetch('/book/add/', {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n          \n          },\n          body: JSON.stringify({ title,author, genre,description}),\n          });\n          const data = await response.text();\n          const body = JSON.parse(data)\n          \n          return data;\n        }catch(e){\n        return e;\n      }\n  \n    }\n    async editbook(title,author, genre,description,id,token) {\n\n      try{\n          const response = await fetch(`/book/edit/${id}/`, {\n          method: 'PATCH',\n          headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token\n          \n          },\n          body: JSON.stringify({ title,author, genre,description}),\n          });\n          const data = await response.text();\n          const body = JSON.parse(data)\n          \n          return data;\n        }catch(e){\n        return e;\n      }\n  \n    }\n\n\n\n    async bookdetail(id) {\n\n      try{\n          const response = await fetch(`/book/detail/${id}`, {\n          method: 'GET',\n          headers: {\n          'Content-Type': 'application/json',\n          }\n          \n          });\n          const data = await response.text();\n          const body = JSON.parse(data)\n          return body;\n        \n        }catch(e){\n        return e;\n      }\n  \n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    \n   \n \n \n \n \n \n \n \n \n  }\n  \n  export default new BookService();\n  ","/home/imran/Documents/CDP/BookSelf Project/client/src/components/EditBookForm.js",["73","74"],"import React from 'react';\nimport BookService from \"../services/book.service\";\nimport AuthService from \"../services/auth.service\"\nimport {Redirect} from 'react-router-dom';\n\nclass EditBookForm extends React.Component{\n    \n    \n    state = {\n        response:\"\",\n        id:\"\",\n        title:\"\",\n        author:\"\",\n        genre:\"\",\n        description:\"\"\n    };\n\n    handleChange = (e)=>{\n       \n        this.setState({[e.target.name]: e.target.value})\n\n    };\n\n    componentDidMount(){\n\n        this.setState({\n            response:'',\n            id:this.props.id,\n            title:this.props.title,\n            author:this.props.author,\n            genre:this.props.genre,\n            description:this.props.description})\n    }\n    \n    handleSubmit = async e => {\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        const data = await BookService.editbook(this.state.title,this.state.author,\n            this.state.genre,this.state.description,this.state.id,token)\n        \n        this.setState({ responseToPost: data });\n       \n        window.location.href = `/book/details/${this.state.id}`\n         \n      };\n \n      \n    \n    render(){\n        return (\n              <div className=\"col-md-12\">\n                <div className=\"card card-container\">\n                  <h3>Edit {this.state.title} </h3>\n              \n                  <form onSubmit={this.handleSubmit}>\n                  {/* <form> */}\n                    <div className=\"form-group\">\n                      <label htmlFor=\"title\" >Title</label> \n                      <input type=\"text\" value={this.state.title} className=\"form-control\"  name=\"title\" onChange={ this.handleChange } /><br/>\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"author\">Author Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"author\"\n                        value={this.state.author}\n                        onChange={ this.handleChange }\n                        \n      \n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"genre\">Genre</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"genre\"\n                        value={this.state.genre}\n                        onChange={ this.handleChange }\n                        \n      \n                      />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"description\">Description</label>\n                      <textarea\n                        className=\"form-control\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={ this.handleChange }\n                        rows=\"5\"\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                      <button type=\"submit\" className=\"btn btn-primary btn-block\" >\n                        <span>Update</span>\n                      </button>\n                    </div>\n                    \n                  </form>\n                 \n             </div> \n                \n            </div>\n           \n        )\n    }\n\n}\n\nexport default EditBookForm","/home/imran/Documents/CDP/BookSelf Project/client/src/components/book.js",["75","76","77","78","79"],"import React,{useState} from \"react\";\nimport axios from \"axios\"\nimport \"./home.css\"\nimport BookDetails from \"./BookDetails\"\nimport { BrowserRouter, Link, Switch, Route } from 'react-router-dom';\nimport BookService from \"../services/book.service\";\nimport EditBookForm from \"./EditBookForm\"\n\n\nfunction BookCRUD(){\n\n    const [books, setBooks] = useState(null);\n    const user = localStorage.getItem('token')\n    const [editBook, setEditBook] = useState(null);\n   \n    const initialFormState = { id:'', title: '',author:'', genre: '',description:'' }\n    const [edit, setEdit] = useState(initialFormState)\n\n    const apiURL = \"/book\";\n    axios.get(apiURL).then(res=>res).then(response=>setBooks(response.data) )\n     \n    const deleteData = async (id) => \n    {\n      const token = localStorage.getItem('token');\n      const data = await BookService.deletebook(id,token)\n      const response = await axios.get(apiURL)\n      setBooks(response.data) \n     \n    }\n  \n\n\n\n\n     const editData = async (id) =>\n    {\n      const token = localStorage.getItem('token');\n      // setEditBook(true)\n      axios.get(`/book/detail/${id}/`).then(res=>res)\n      .then(response=>setEdit({\n        id:response.data._id,\n        title:response.data.title,\n        author:response.data.author,\n        genre:response.data.genre,\n        description:response.data.description \n      \n      \n      }) )\n      \n     \n      // setEdit(response)\n\n\n      \n\n    }\n\n\n\n        return (\n                 \n                    \n                     <div className=\"App\">\n\n                      { edit.id ? ( \n\n                        <div>\n                        \n                          <EditBookForm\n\n                            id={edit.id}\n                            title={edit.title}\n                            author={edit.author}\n                            genre={edit.genre}\n                            description={edit.description}\n                          \n                          \n                          />\n                          \n\n\n\n\n                               \n                         </div>\n                       \n                        \n                        \n                        \n                        ):(\n                        <div>\n                        <h1> Book List</h1>     \n                    \n                        <div className=\"books\">\n                          {books &&\n                            books.map((book, index) => {        \n                              return (\n                                <div className=\"book\" key={index}>\n                                  <h3>Book {index + 1}</h3>\n                                  <h2>{book.title}</h2>\n                  \n                                  <div className=\"details\">\n                                    \n                                    <p>Title 📖: {book.title}</p>\n                                    <p>Author 👨: {book.author}</p>\n                                    \n                                    \n                                    \n                                  </div>\n                                      \n                                      <BrowserRouter>  \n                        \n                                         <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={()=>{ window.location.href = `/book/details/${book._id}`}}>Details</button> <br/>\n                                         {user && (\n                                           <p>\n                                           \n                                          <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={()=>{deleteData(book._id)}}>Delete</button>\n                                          <br/>\n                                          <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={()=>{editData(book._id)}}>Edit</button>\n                                          </p>\n                                        \n                                         )}\n                                                                \n                                          <Switch>\n\n                                                                         \n                                            <Route  path=\"/book/details/:id\" component={()=>< BookDetails />} />                               \n                                          </Switch>\n                                      </BrowserRouter>\n                              \n                                </div>\n                              );\n                            })}\n                        </div>\n                        </div>\n                      )}\n                    </div>\n                \n                \n                \n                \n                \n                )\n                   \n         \n         \n         };\n        \n        \n\n      \n\nexport default BookCRUD\n","/home/imran/Documents/CDP/BookSelf Project/client/src/components/updateProfile.js",[],{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":12},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"80","severity":1,"message":"88","line":1,"column":15,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"88","line":1,"column":15,"nodeType":"82","messageId":"83","endLine":1,"endColumn":23},{"ruleId":"80","severity":1,"message":"89","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},{"ruleId":"80","severity":1,"message":"90","line":12,"column":15,"nodeType":"82","messageId":"83","endLine":12,"endColumn":21},{"ruleId":"80","severity":1,"message":"91","line":38,"column":16,"nodeType":"82","messageId":"83","endLine":38,"endColumn":18},{"ruleId":"80","severity":1,"message":"92","line":40,"column":15,"nodeType":"82","messageId":"83","endLine":40,"endColumn":19},{"ruleId":"80","severity":1,"message":"92","line":55,"column":17,"nodeType":"82","messageId":"83","endLine":55,"endColumn":21},{"ruleId":"80","severity":1,"message":"92","line":76,"column":17,"nodeType":"82","messageId":"83","endLine":76,"endColumn":21},{"ruleId":"80","severity":1,"message":"93","line":3,"column":8,"nodeType":"82","messageId":"83","endLine":3,"endColumn":19},{"ruleId":"80","severity":1,"message":"94","line":4,"column":9,"nodeType":"82","messageId":"83","endLine":4,"endColumn":17},{"ruleId":"80","severity":1,"message":"95","line":5,"column":25,"nodeType":"82","messageId":"83","endLine":5,"endColumn":29},{"ruleId":"80","severity":1,"message":"96","line":14,"column":12,"nodeType":"82","messageId":"83","endLine":14,"endColumn":20},{"ruleId":"80","severity":1,"message":"97","line":14,"column":22,"nodeType":"82","messageId":"83","endLine":14,"endColumn":33},{"ruleId":"80","severity":1,"message":"98","line":25,"column":13,"nodeType":"82","messageId":"83","endLine":25,"endColumn":17},{"ruleId":"80","severity":1,"message":"99","line":37,"column":13,"nodeType":"82","messageId":"83","endLine":37,"endColumn":18},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'useState' is defined but never used.","'axios' is defined but never used.","'apiURL' is assigned a value but never used.","'id' is assigned a value but never used.","'body' is assigned a value but never used.","'AuthService' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'editBook' is assigned a value but never used.","'setEditBook' is assigned a value but never used.","'data' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]